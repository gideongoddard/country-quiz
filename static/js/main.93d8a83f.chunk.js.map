{"version":3,"sources":["components/Intro/undraw_Around_the_world_re_n353.png","components/Button/Button.js","components/Intro/Intro.js","components/Option/Option.js","components/Confirm/Confirm.js","components/Question/Question.js","components/Box/Box.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","handleGetStarted","bind","this","onGetStarted","onClick","className","text","React","Component","Intro","src","World","alt","width","height","countries","disabled","Option","state","status","handleSelection","selected","code","setState","onSelection","Confirm","Question","options","answer","currentQuestion","questions","Math","floor","random","length","key","capital","map","option","alpha2Code","name","Box","App","allCountries","getStarted","fetch","then","response","json","result","error","unfiltered","filtered","reject","item","answers","sample","one","slice","two","three","four","five","six","seven","eight","nine","ten","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93d8a83f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/undraw_Around_the_world_re_n353.2934a5eb.png\";","import './button.css';\nimport React from 'react';\n\nclass Button extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleGetStarted = this.handleGetStarted.bind(this);\n    }\n\n    handleGetStarted() {\n        this.props.onGetStarted();\n    }\n\n    render() {\n        return (\n            <button onClick={this.handleGetStarted} className=\"Button\">{this.props.text}</button>\n        )\n    }\n}\n\nexport default Button;","import './intro.css';\nimport World from './undraw_Around_the_world_re_n353.png'\nimport Button from '../Button/Button'\nimport React from 'react';\n\nclass Intro extends React.Component {\n    render() {\n        return (\n            <div>\n                <img className=\"World\" src={World} alt=\"Around the world illustration\" width=\"500\" height=\"343\" />\n                <h2 className=\"Welcome\">Welcome to the biggest, baddest country quiz you ever did play!</h2>\n                <p className=\"Intro\">You'll face 10 questions. They could be about any country on Earth so let's hope you've done your homework...</p>\n                <Button text=\"Let's get started!\" countries={this.props.countries} disabled={this.props.disabled} onGetStarted={this.props.onGetStarted} />\n            </div>\n        );\n    }\n}\n\nexport default Intro;","import React from 'react';\nimport './option.css'\n\nclass Option extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            status: 'Default',\n        }\n\n        this.handleSelection = this.handleSelection.bind(this);\n    }\n\n    componentDidUpdate() {\n        if ((this.props.selected === this.props.code) && (this.state.status !== 'Selected')) {\n            this.setState({\n                status: 'Selected'\n            })\n        } else if ((this.props.selected !== this.props.code) && (this.state.status !== 'Default')) {\n            this.setState({\n                status: 'Default'\n            })\n        }\n    }\n\n    handleSelection() {\n        this.props.onSelection(this.props.code);\n    }\n\n    render() {\n        return (\n            <div>\n                <button className={`Option ${this.state.status}`} onClick={this.handleSelection}>{this.props.text}</button>\n            </div>\n        )\n    }\n}\n\nexport default Option;","import React from 'react';\nimport './confirm.css'\n\nclass Confirm extends React.Component {\n    render() {\n        return (\n            <button className=\"Confirm\">Confirm</button>\n        )\n    }\n}\n\nexport default Confirm;","import './question.css';\nimport Option from '../Option/Option'\nimport React from 'react';\nimport Confirm from '../Confirm/Confirm'\n\nclass Question extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            options: [],\n            answer: '',\n            selected: '',\n        }\n        this.handleSelection = this.handleSelection.bind(this);\n    }\n\n    componentDidMount() {\n        let currentQuestion = this.props.currentQuestion -1;\n        let options = this.props.questions[currentQuestion];\n        let num = Math.floor(Math.random() * options.length);\n        let answer = options[num];\n        this.setState({\n            options: options,\n            answer: answer,\n        })\n    }\n\n    handleSelection(key) {\n        this.setState({\n            selected: key\n        })\n    }\n\n    render() {\n    \n        return (\n            <div>\n                <h2>Question {this.props.currentQuestion}</h2>\n                <p>{this.state.answer.capital} is the capital city of which country?</p>\n                {this.state.options.map(option => (\n                    <Option key={option.alpha2Code} code={option.alpha2Code} selected={this.state.selected} text={option.name} onSelection={this.handleSelection} />\n                ))}\n                <>\n                    {\n                        this.state.selected ? (\n                            <Confirm />\n                        ) : (\n                            <></>\n                        )\n                    }\n                </>\n            </div>\n        )\n    }\n}\n\nexport default Question;","import React from 'react';\nimport './box.css';\nimport Intro from '../Intro/Intro'\nimport Question from '../Question/Question'\n\nfunction Box(props) {\n    if (props.currentQuestion === 0) {\n        return (\n            <div className=\"Box\">\n                <Intro disabled={props.disabled} onGetStarted={props.onGetStarted} />\n            </div>\n        )\n    } else if (props.currentQuestion) {\n        return (\n            <div className=\"Box\">\n                <Question currentQuestion={props.currentQuestion} questions={props.questions} />\n            </div>\n        )\n    }\n}\n\nexport default Box;","import React from 'react';\nimport sample from 'underscore/modules/sample.js';\nimport reject from 'underscore/modules/reject.js';\nimport './main.css';\nimport Box from './components/Box/Box';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      disabled: true,\n      currentQuestion: 0,\n      allCountries: [],\n      questions: [],\n    }\n\n    this.getStarted = this.getStarted.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://restcountries.eu/rest/v2/all')\n      .then(response => response.json())\n      .then(\n        (result) => {\n          this.setState({\n            allCountries: result,\n            disabled: false,\n          });\n        },\n        (error) => {\n          this.setState({\n            error\n          })\n        }\n      )\n  }\n\n  getStarted() {\n    let unfiltered = this.state.allCountries;\n    let filtered = reject(unfiltered, (item) => {\n      return item.capital === \"\";\n    });\n    let answers = sample(filtered, 40);\n    let one = answers.slice(0,4);\n    let two = answers.slice(4,8);\n    let three = answers.slice(8,12);\n    let four = answers.slice(12,16);\n    let five = answers.slice(16,20);\n    let six = answers.slice(20,24);\n    let seven = answers.slice(24,28);\n    let eight = answers.slice(28,32);\n    let nine = answers.slice(32,36);\n    let ten = answers.slice(36);\n    this.setState({\n      questions: [\n        one, two, three, four, five, six, seven, eight, nine, ten,\n      ],\n      currentQuestion: 1,\n    });\n  }\n\n  render() {\n    const error = this.state.error;\n    if (error) {\n      return <div className=\"Error\">Error: {error.message}</div>\n    } else {\n      return (\n        <div className=\"App\">\n          <div className=\"Container\">\n            <h1>Country quiz</h1>\n            <Box currentQuestion={this.state.currentQuestion} questions={this.state.questions} disabled={this.state.disabled} onGetStarted={this.getStarted} />\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}